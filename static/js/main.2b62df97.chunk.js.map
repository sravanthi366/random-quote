{"version":3,"sources":["QuoteDb.js","components/QuoteAndAuthor.js","App.js","index.js"],"names":["quotes","QuoteAndAuthor","props","quote","generateRandomQuote","className","author","onClick","type","class","window","open","encodeURIComponent","App","state","arr","num","Math","floor","random","length","newQuote","setState","shuffleQuotes","sort","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6BeA,EA7BA,CACX,CACI,MAAS,kFACT,OAAU,WAEd,CACI,MAAS,sCACT,OAAU,uBAGd,CACI,MAAS,0JACT,OAAU,gBAEd,CACI,MAAS,iGACT,OAAU,WAEd,CACI,MAAS,gJACT,OAAU,gBAEd,CACI,MAAS,yDACT,OAAU,YCrBH,SAASC,EAAeC,GAAQ,IAEnCC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,oBACf,OACI,qBAAKC,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BF,EAAMA,QAChC,qBAAIE,UAAU,aAAd,eAA8BF,EAAMG,UACpC,yBACIC,QAAS,WAAQH,EAAoBJ,IACrCQ,KAAK,SAFT,UAGI,mBAAGC,MAAM,iBAHb,qBAIA,yBACIJ,UAAU,OACVE,QAAS,WACLH,EAAoBJ,GACpBU,OAAOC,KAAK,0CAA4CC,mBAAmBT,EAAMA,MAAQ,KAAOA,EAAMG,UAE1GE,KAAK,SANT,UAMkB,mBAAGC,MAAM,mBAN3B,uB,UCZKI,E,4MAGnBC,MAAM,CACJX,MAAOH,EAAO,GAAGG,MACjBG,OAAQN,EAAO,GAAGM,Q,EAKpBF,oBAAsB,SAACW,GAGrB,IAAIC,EAAMC,KAAKC,MAAOD,KAAKE,SAASnB,EAAOoB,QAEvCC,EAAWrB,EAAOgB,GACtB,EAAKM,SAAS,CAEZnB,MAAOkB,EAASlB,MAChBG,OAAQe,EAASf,SAInB,EAAKiB,cAAcvB,I,EAKrBuB,cAAgB,SAACR,GACf,OAAOA,EAAIS,MAAM,WAAW,MAAO,GAAIP,KAAKE,a,uDAI9C,OACE,sBAAKd,UAAU,YAAf,UACA,oBAAIA,UAAU,iBAAd,2BAEA,cAACJ,EAAD,CACMG,oBAAqBqB,KAAKrB,oBAC1BD,MAAOsB,KAAKX,e,GAvCWY,aCEjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b62df97.chunk.js","sourcesContent":["const quotes = [\r\n    {\r\n        \"quote\": \"Forget all the reasons why it won't work and believe the one reason why it will\",\r\n        \"author\": \"Unknown\"\r\n    },\r\n    {\r\n        \"quote\": \"Always do what you are afraid to do\",\r\n        \"author\": \"Ralph Waldo Emerson\"\r\n    },\r\n\r\n    {\r\n        \"quote\": \"Don’t be intimidated by what you don’t know. That can be your greatest strength and ensure that you do things differently from everyone else.\",\r\n        \"author\": \"Sara Blakely\"\r\n    },\r\n    {\r\n        \"quote\": \"If you keep on doing what you've always done, you will keep getting what you've always gotten.\",\r\n        \"author\": \"Unknown\"\r\n    },\r\n    {\r\n        \"quote\": \" For God so loved the world that he gave his one and only Son, that whoever believes in him shall not perish but have eternal life. John 3:16\",\r\n        \"author\": \"Jesus Christ\"\r\n    },\r\n    {\r\n        \"quote\": \"The surest way to find your dream job is to create it.\",\r\n        \"author\": \"Unknown\"\r\n\r\n    }\r\n]\r\n\r\nexport default quotes;","import React from 'react'\r\nimport quotes from '../QuoteDb'\r\n\r\nexport default function QuoteAndAuthor(props) {\r\n\r\n    const { quote, generateRandomQuote } = props;\r\n    return (\r\n        <div className=\"card\" >\r\n\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">{quote.quote}</p>\r\n                <h5 className=\"card-title\">- {quote.author}</h5>\r\n                <button\r\n                    onClick={() => { generateRandomQuote(quotes) }}\r\n                    type=\"submit\">\r\n                    <i class=\"fas fa-mouse\"></i> Generate Quote</button>\r\n                <button\r\n                    className=\"ml-3\"\r\n                    onClick={() => {\r\n                        generateRandomQuote(quotes);\r\n                        window.open('https://twitter.com/intent/tweet/?text=' + encodeURIComponent(quote.quote + '--' + quote.author))\r\n                    }}\r\n                    type=\"submit\"><i class=\"fab fa-twitter\"></i> Share Quote</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{Component} from 'react';\nimport QuoteAndAuthor from './components/QuoteAndAuthor';\nimport quotes from '../src/QuoteDb';\nimport CSS from '../src/App.css'\nexport default class App extends Component{\n  //state\n\n  state={\n    quote: quotes[0].quote,\n    author: quotes[0].author\n  }\n\n  //generator different quote function\n\n  generateRandomQuote = (arr)=>{\n    //get randum numbers\n\n    let num = Math.floor (Math.random()*quotes.length)\n\n    let newQuote = quotes[num]\n    this.setState({\n\n      quote: newQuote.quote,\n      author: newQuote.author\n\n    })\n\n    this.shuffleQuotes(quotes)\n  }\n\n  //shuffle function\n\n  shuffleQuotes = (arr)=>{\n    return arr.sort (function(){return 0.5-Math.random()})\n  }\n\nrender(){\n  return(\n    <div className=\"container\" >\n    <h1 className='text-container'> Random Quote</h1>\n\n    <QuoteAndAuthor\n          generateRandomQuote={this.generateRandomQuote}\n          quote={this.state}\n        />\n\n    </div>\n  )\n}\n  \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}